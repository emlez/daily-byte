// You are given two strings, s and t which only consist of lowercase letters. t is generated by shuffling the letters in s as well as potentially adding an additional random character. Return the letter that was randomly added to t if it exists, otherwise, return ’ ‘.
// Note: You may assume that at most one additional character can be added to t.

// Ex: Given the following strings...

// s = "foobar", t = "barfoot", return 't'
// s = "ide", t = "idea", return 'a'
// s = "coding", t "ingcod", return ''

const spotDifference = (s: string, t: string): string => {
  const map = new Map<string, number>()
  for (let i = 0; i < s.length; i++) {
    const char = s[i]
    map.set(char, map.get(char)! + 1 || 1)
  }
  for (let i = 0; i < t.length; i++) {
    const char = t[i]
    if (!map.has(char)) {
      return `"${char}"`
    }
    map.set(char, map.get(char)! - 1)
  }
  return `""`
}

console.log(spotDifference("foobar", "barfoot"))
console.log(spotDifference("ide", "idea"))
console.log(spotDifference("coding", "ingcod"))
console.log(spotDifference("algorithm", "algorithms"))
